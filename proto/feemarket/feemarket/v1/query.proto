syntax = "proto3";
package feemarket.feemarket.v1;

option go_package = "github.com/skip-mev/feemarket/x/feemarket/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "feemarket/feemarket/v1/genesis.proto";

// Query Service for the feemarket module.
service Query {
  // Params returns the current feemarket module parameters.
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http) = {
      get : "/feemarket/v1/params"
    };
  };

  // FeeMarketInfo returns the current feemarket module state info.
  rpc FeeMarketInfo(FeeMarketInfoRequest) returns (FeeMarketInfoResponse) {
    option (google.api.http) = {
      get : "/feemarket/v1/info"
    };
  };
}

// ParamsRequest is the request type for the Query/Params RPC method.
message ParamsRequest {}

// ParamsResponse is the response type for the Query/Params RPC method.
message ParamsResponse { Params params = 1 [ (gogoproto.nullable) = false ]; }

// FeeMarketInfo is the request type for the Query/FeeMarketInfo RPC method.
message FeeMarketInfoRequest {}

// QueryFeeMarketInfoResponse is the response type for the Query/FeeMarketInfo
// RPC method.
message FeeMarketInfoResponse { map<string, string> info = 1; }
